(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{712:function(s,a,t){"use strict";t.r(a);var e=t(10),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"学习资源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习资源"}},[s._v("#")]),s._v(" 学习资源")]),s._v(" "),t("h3",{attrs:{id:"官方文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#官方文档"}},[s._v("#")]),s._v(" 官方文档")]),s._v(" "),t("p",[t("a",{attrs:{href:"http://www.dockerinfo.net/dockerfile%e4%bb%8b%e7%bb%8d",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker 中文文档"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("docker的镜像仓库 "),t("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker hub"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("docker所有文档 "),t("a",{attrs:{href:"https://docs.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker doc"),t("OutboundLink")],1),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("docker 的命令行文档 "),t("a",{attrs:{href:"https://docs.docker.com/engine/reference/run/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Command-line reference"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("docker 的dockerfile文件文档 "),t("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/#run",target:"_blank",rel:"noopener noreferrer"}},[s._v("Dockerfile reference"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("docker数据的管理文档 "),t("a",{attrs:{href:"https://docs.docker.com/storage/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker storage"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("docker网络文档 "),t("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/network/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker network"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("docker compose文档 "),t("a",{attrs:{href:"https://docs.docker.com/compose/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker compose"),t("OutboundLink")],1)])]),s._v(" "),t("h3",{attrs:{id:"第三方中文文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第三方中文文档"}},[s._v("#")]),s._v(" 第三方中文文档")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.simapple.com/docker-tutorial",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker简明教程——中文版"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.runoob.com/docker/docker-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("菜鸟教程"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.runoob.com/docker/docker-command-manual.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("菜鸟教程——Docker命令大全"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"在线平台"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在线平台"}},[s._v("#")]),s._v(" 在线平台")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://labs.play-with-docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("play-with-docker"),t("OutboundLink")],1),s._v("：是由Docker公司赞助，免费提供在线的Docker操作平台，非常适合新手学习Docker使用")]),s._v(" "),t("h2",{attrs:{id:"docker简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker简介"}},[s._v("#")]),s._v(" Docker简介")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-20220202133143406.png",alt:"image-20220202133143406%20"}})]),s._v(" "),t("p",[s._v("Docker 是一个应用打包、分发、部署的工具，也可以把它理解为一个轻量的虚拟机，它只虚拟你软件需要的运行环境，多余的一点都不要，而普通虚拟机则是一个完整而庞大的系统，包含各种可能并不需要的软件")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("打包")]),s._v("：就是把你软件运行所需的依赖、第三方库、软件打包到一起，变成一个安装包")]),s._v(" "),t("li",[t("strong",[s._v("分发")]),s._v("：你可以把你打包好的“安装包”上传到一个镜像仓库，其他人可以非常方便的获取和安装")]),s._v(" "),t("li",[t("strong",[s._v("部署")]),s._v("：拿着“安装包”就可以一个命令运行起来你的应用，自动模拟出一摸一样的运行环境，不管是在 Windows/Mac/Linux")])]),s._v(" "),t("p",[s._v("Docker版本：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("社区版 docker-ce")]),s._v(" "),t("p",[s._v("由社区维护和提供技术支持，为免费版本，适合个人开发人员和小团队使用。"),t("strong",[s._v("本文章以下内容使用的社区版本")])])]),s._v(" "),t("li",[t("p",[s._v("企业版 docker-EE")]),s._v(" "),t("p",[s._v("收费版本，由售后团队和技术团队提供技术支持，专为企业开发和 IT 团队而设计，相比 Docker-CE，增加一些额外功能，更重要的是提供了更安全的保障")])])]),s._v(" "),t("h2",{attrs:{id:"安装配置docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装配置docker"}},[s._v("#")]),s._v(" 安装配置Docker")]),s._v(" "),t("p",[s._v("步骤分为两个部分")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("安装到机器")])]),s._v(" "),t("li",[t("p",[s._v("配置镜像源")]),s._v(" "),t("p",[s._v("Docker的默认官方远程仓库是hub.docker.com，由于网络原因，下载一个Docker官方镜像可能会需要很长的时间，甚至下载失败，所以我们需要配置镜像源。配置镜像源后，下载官方仓库（hub.docker.com）里的镜像时，才能更快的下载")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("镜像加速器")]),s._v(" "),t("th",[s._v("镜像加速器地址")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("Docker 中国官方镜像")]),s._v(" "),t("td",[t("a",{attrs:{href:"https://registry.docker-cn.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://registry.docker-cn.com"),t("OutboundLink")],1)])]),s._v(" "),t("tr",[t("td",[s._v("DaoCloud 镜像站")]),s._v(" "),t("td",[t("a",{attrs:{href:"http://f1361db2.m.daocloud.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://f1361db2.m.daocloud.io"),t("OutboundLink")],1)])]),s._v(" "),t("tr",[t("td",[s._v("Azure 中国镜像")]),s._v(" "),t("td",[t("a",{attrs:{href:"https://dockerhub.azk8s.cn/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://dockerhub.azk8s.cn"),t("OutboundLink")],1)])]),s._v(" "),t("tr",[t("td",[s._v("科大镜像站")]),s._v(" "),t("td",[t("a",{attrs:{href:"https://docker.mirrors.ustc.edu.cn/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docker.mirrors.ustc.edu.cn"),t("OutboundLink")],1)])]),s._v(" "),t("tr",[t("td",[s._v("阿里云")]),s._v(" "),t("td",[s._v("https://<your_code>.mirror.aliyuncs.com 【具体参见 "),t("code",[s._v("云服务器使用Docker")]),s._v("部分】")])]),s._v(" "),t("tr",[t("td",[s._v("七牛云")]),s._v(" "),t("td",[t("a",{attrs:{href:"https://reg-mirror.qiniu.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://reg-mirror.qiniu.com"),t("OutboundLink")],1)])]),s._v(" "),t("tr",[t("td",[s._v("网易云")]),s._v(" "),t("td",[t("a",{attrs:{href:"https://hub-mirror.c.163.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://hub-mirror.c.163.com"),t("OutboundLink")],1)])]),s._v(" "),t("tr",[t("td",[s._v("腾讯云")]),s._v(" "),t("td",[t("a",{attrs:{href:"https://mirror.ccs.tencentyun.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://mirror.ccs.tencentyun.com"),t("OutboundLink")],1)])])])])])]),s._v(" "),t("p",[t("strong",[s._v("注意")]),s._v("：")]),s._v(" "),t("p",[s._v("在Win/Mac上可以安装桌面版Docker，提供可视化界面，操作更为简单")]),s._v(" "),t("p",[s._v("在Linux系统上安装则需要使用命令")]),s._v(" "),t("h3",{attrs:{id:"mac"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mac"}},[s._v("#")]),s._v(" Mac")]),s._v(" "),t("p",[t("strong",[s._v("安装")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("官网下载 "),t("a",{attrs:{href:"https://www.docker.com/products/docker-desktop",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.docker.com/products/docker-desktop"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[s._v("安装到Mac")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022013016245407020.png",alt:"image-20220130162454070"}})]),s._v(" "),t("p",[s._v("输入密码，接受协议")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022013115274546620.png",alt:"image-20220131152745466"}})]),s._v(" "),t("p",[s._v("安装成功，Docker桌面版主界面")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022013016373099720.png",alt:"image-20220130163730997"}})])])]),s._v(" "),t("p",[t("strong",[s._v("配置镜像源")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022013017183425720.png",alt:"image-20220130171834257"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022013017330096620.png",alt:"image-20220130173300966"}})]),s._v(" "),t("h3",{attrs:{id:"linux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[s._v("#")]),s._v(" Linux")]),s._v(" "),t("p",[s._v("推荐一种方式")]),s._v(" "),t("p",[t("strong",[s._v("方式一")])]),s._v(" "),t("p",[s._v("下载脚本，自动安装Docker")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://get.docker.com "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" -s docker --mirror Aliyun\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("方式二")])]),s._v(" "),t("p",[s._v("使用yum下载")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce docker-ce-cli containerd.io\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[t("p",[t("strong",[s._v("docker-ce")]),s._v("：Docker守护进程，负责所有的容器管理工作，在 Linux 上依赖另外两个完成工作")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("docker-ce-cli")]),s._v(" ：用于控制Docker守护进程的 CLI 工具（可以通过CLI工具控制远程 Docker 守护进程）")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("containerd.io")]),s._v(" ： 守护进程与操作系统之间的接口层，本质上将Docker与操作系统分离")]),s._v(" "),t("blockquote",[t("p",[s._v("containerd 可用作 Linux 和 Windows 的守护程序。 它管理其主机系统的完整容器生命周期，从图像传输和存储到容器执行和监督，再到低级存储到网络附件等等")])])])]),s._v(" "),t("p",[s._v("启动docker守护进程")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("systemctl start docker\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查看docker进程状态")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("systemctl start docker\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("卸载docker")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("yum remove docker-ce "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#卸载")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf /var/lib/docker "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除镜像、容器、配置文件等内容")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"docker镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像"}},[s._v("#")]),s._v(" Docker镜像")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("镜像类似于软件的安装包")])]),s._v(" "),t("li",[t("p",[s._v("容器中运行着某一个镜像，容器之间彼此独立互不影响")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新建容器，其中运行指定镜像")]),s._v("\ndocker run "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTIONS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" IMAGE "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COMMAND"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ARG"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"官方镜像仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#官方镜像仓库"}},[s._v("#")]),s._v(" 官方镜像仓库")]),s._v(" "),t("p",[s._v("docker hub是官方提供的镜像仓库，直接在"),t("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker hub 官网"),t("OutboundLink")],1),s._v("搜索想要安装在docker中的软件，根据搜索结果的指示进行安装")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022013017392416620.png",alt:"image-20220130173924166"}})]),s._v(" "),t("p",[s._v("以安装redis为例子，进入该镜像的描述页，有详细的使用方法")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022013017530890420.png",alt:"image-20220130175308904"}})]),s._v(" "),t("p",[t("strong",[s._v("查找镜像")])]),s._v(" "),t("p",[s._v("在Docker hub中查找")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker search redis\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 字段含义")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# NAME: 镜像仓库源的名称")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# DESCRIPTION: 镜像的描述")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stars: 点赞数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# OFFICIAL: 是否 docker 官方发布")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# AUTOMATED: 自动构建")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/2022091720584520.png",alt:"image-20220917205844794"}})]),s._v(" "),t("p",[t("strong",[s._v("下载镜像")])]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("docker pull redis \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不指定镜像的版本号，默认下载latest，即最新版本")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/2022091721034920.png",alt:"image-20220917210349448"}})]),s._v(" "),t("p",[t("strong",[s._v("查看本地已下载镜像列表")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker images\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/2022091721054020.png",alt:"image-20220917210539975"}})]),s._v(" "),t("p",[t("strong",[s._v("删除本地镜像")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker rmi redis\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"构建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建镜像"}},[s._v("#")]),s._v(" 构建镜像")]),s._v(" "),t("p",[s._v("当 docker 镜像仓库中下载的镜像不能满足需求时，可以通过以下两种方式构建自己的镜像")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("使用 Dockerfile 指令来创建一个新的镜像（docker build 是把 镜像/源码——>镜像）")])]),s._v(" "),t("li",[t("p",[s._v("把容器打包为镜像（docker commit 是把 容器——>镜像）")])])]),s._v(" "),t("p",[t("strong",[s._v("Dockerfile构建镜像")])]),s._v(" "),t("p",[s._v("这里使用一个简单地Gin框架项目，来构建镜像")]),s._v(" "),t("p",[s._v("初始化项目")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("go mod init DockerBuild\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("新建文件main.go")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"github.com/gin-gonic/gin"')]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"net/http"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" gin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("GET")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("gin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("JSON")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("StatusOK"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" gin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("H"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\t"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ok"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('":8888"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("dockerfile")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" golang")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为镜像设置必要的环境变量(Go编译时需要)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" CGO_ENABLED=0 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    GOOS=linux "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    GOARCH=amd64")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器内，移动到`/build`内")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /build")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将本地文件 复制 到容器内（第一个点是执行docker build命令所在的目录，第二个点是容器内的路径，即在/build目录下）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将代码编译成二进制可执行文件（文件名为app），这个点是容器内的/build目录下")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" go build -o app .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 声明服务端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 8888")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器时运行的命令（点是容器内路径/build目录，即运行/build/app文件）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./app"')]),s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("在项目目录下执行构建镜像命令")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker build -t higo:v1 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("注意")]),s._v("："),t("code",[s._v(".")]),s._v(" 是指上下文路径，指定当前目录为上下文路径，"),t("code",[s._v("docker build")]),s._v(" 命令会将该目录下的全部内容交给 Docker 引擎来构建镜像")]),s._v(" "),t("p",[s._v("所以，上下文路径下不要放无用的文件，因为会一起打包发送给 docker 引擎，如果文件过多会造成过程缓慢。")]),s._v(" "),t("p",[s._v("如果确实上下文目录下有些文件，不需要打包给docker，可以在上下文目录下添加忽略文件"),t("code",[s._v(".dockerignore")])]),s._v(" "),t("p",[t("strong",[s._v("从容器中构建镜像")])]),s._v(" "),t("p",[s._v("把一个正在运行的容器，构建为一个新的镜像【注意：容器必须是运行状态】")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker commit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("容器名/容器id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("新的镜像名:版本号"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"发布到官方镜像仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布到官方镜像仓库"}},[s._v("#")]),s._v(" 发布到官方镜像仓库")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在docker的镜像仓库 "),t("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker hub"),t("OutboundLink")],1),s._v(" ，注册用户（注册时填写 用户名+邮箱+密码，国外的东东都喜欢在命令行中使用这个用户名作为用户标识，所以记住啊）")])]),s._v(" "),t("li",[t("p",[s._v("创建一个镜像仓库")]),s._v(" "),t("p",[s._v("官方仓库远程镜像仓库的地址：用户名/镜像仓库名")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022020118274174520.png",alt:"image-20220201182741745"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/2022091802264020.png",alt:"image-20220918022640359"}})])]),s._v(" "),t("li",[t("p",[s._v("本地登录到官方仓库")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker login -u 用户名 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 之后要求输入密码")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("给待发布的镜像打标记（给镜像起个新名字+版本号，打标记会在本地重新生成以tag命名的新镜像）")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker tag local-image:tag remote-repo:tag\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# username是用户名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# local-image:tag  是本地待发布的镜像的名字和版本号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remote-repo:tag  是发布到远程后的名字和版本号")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("注意")]),s._v("：远程镜像仓库的地址，官方远程仓库地址一般为：用户名/镜像仓库名")]),s._v(" "),t("p",[s._v("例如，我的远程仓库地址：hyjhyj1098/test，其中hyjhyj1098是用户名，test是仓库名，所以我的标记为")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker tag test:v1 hyjhyj1098/test:v1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("可以看到"),t("code",[s._v("Images")]),s._v("选项卡下多了一个"),t("code",[s._v("hyjhyj1098/test")]),s._v("的镜像")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022020118442322020.png",alt:"image-20220201184423220"}})])]),s._v(" "),t("li",[t("p",[s._v("推送到远程仓库")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker push remote-repo:tag\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("可以在网站看到上传的镜像")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022020119185421120.png",alt:"image-20220201191854211"}})])])]),s._v(" "),t("h3",{attrs:{id:"发布-拉取私有镜像仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布-拉取私有镜像仓库"}},[s._v("#")]),s._v(" 发布/拉取私有镜像仓库")]),s._v(" "),t("p",[s._v("上面一直使用的镜像仓库都是官方的，实际上企业一般使用内部的私有镜像仓库（类似于企业一般使用gitlab搭建的内部仓库，而不是github）")]),s._v(" "),t("p",[s._v("两者的基本流程是一样的")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("创建阿里云镜像仓库（如果有条件可以搭建私有仓库）")]),s._v(" "),t("p",[s._v("访问阿里云容器镜像服务("),t("a",{attrs:{href:"https://cr.console.aliyun.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://cr.console.aliyun.com/"),t("OutboundLink")],1),s._v(")，在实例列表里有两个选项，分别是个人实例和企业实例，目前个人实例免费，按照流程创建命名空间（一个命名空间下，可以放多个镜像仓库）即可")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022020119314048120.png",alt:"image-20220201193140481"}})])]),s._v(" "),t("li",[t("p",[s._v("本地登录到阿里私有镜像仓库")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker login "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("镜像服务地址"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#我这里的<镜像服务地址>是：registry.cn-hangzhou.aliyuncs.com")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#然后按照提示，输入用户名和密码")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022031920550301920.png",alt:"image-20220319205503019"}})])]),s._v(" "),t("li",[t("p",[s._v("给待发布的镜像打标记")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker tag  local-image:tag  new-repo:tag\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# local-image:tag  是本地待发布的镜像的名字和版本号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# new-repo:tag  是发布到远程后的名字和版本号 ，这里是：registry.cn-hangzhou.aliyuncs.com/hyj_aliyun/test1:[镜像版本号]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("推送到阿里私有镜像仓")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker push tag "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#上一步打的tag是：registry.cn-hangzhou.aliyuncs.com/hyj_aliyun/test1:[镜像版本号]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("拉取私有镜像")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("docker pull registry.cn-hangzhou.aliyuncs.com/hyj_aliyun/test1:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("镜像版本号"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("将私有镜像库的内容部署到云服务器中")]),s._v(" "),t("p",[s._v("安装Docker等操作，详见上一章"),t("code",[s._v("云服务器使用Docker")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" - "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#切换为root用户")]),s._v("\n\nsystemctl status docker "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#通过systemctl命令查看docker是否在运行，看看到返回结果中有没有running，有就是在运行")]),s._v("\n\ndocker pull "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tag"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载镜像")]),s._v("\n\ndocker images "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看下载的镜像，查看是否下载成功")]),s._v("\n\ndocker run -d --name hello-world-container -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":80 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("镜像名:版本号"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#运行下载的镜像")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("访问")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" <云服务器公网IP>:8080\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022032000354518220.png",alt:"image-20220320003545182"}})]),s._v(" "),t("p",[s._v("注意：如果访问不到，检查下，是否开启防火墙对应端口，是否云服务器安全策略组的入站安全规则是否添加了端口")])])]),s._v(" "),t("h2",{attrs:{id:"dockerfile详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile详解"}},[s._v("#")]),s._v(" Dockerfile详解")]),s._v(" "),t("p",[s._v("Dockerfile文件类似于说明书，定义了构建目标镜像所需的每一个步骤。编写好Dockerfile后，调用构建镜像的命令（docker build）")]),s._v(" "),t("p",[s._v("shell")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker build -t 镜像名:版本号\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("Docker 引擎会逐一按顺序解析 Dockerfile 中的指令，并根据它们的含义执行对应的操作")]),s._v(" "),t("h3",{attrs:{id:"dockerfile指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile指令"}},[s._v("#")]),s._v(" Dockerfile指令")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("FROM")])]),s._v(" "),t("p",[t("code",[s._v("Dockerfile")]),s._v("的第一个指令一定是 "),t("code",[s._v("FROM")]),s._v(" ，该指令指定基础镜像。之后的所有操作都是在该镜像运行的运行的容器中进")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" <image>[:tag] #如果没有指定tag(镜像的版本号) ，默认使用最高版本")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Label")])]),s._v(" "),t("p",[s._v("给镜像添加键值对数据")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" <key1>=<value1>[ <key2>=<value2>[ <key3>=<value3>]]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("也可以写多个"),t("code",[s._v("LABEL")])]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果`value`值中包含空格，需要替换为`\\空格 `。如果指令没有写完想要换行写，加`\\`即可")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" multi.label1="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v(" multi.label2="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2-1\\ value2-2"')]),s._v(" other="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" multi.label1="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n      multi.label2="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n      other="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("以下命令查看")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker image inspect --format"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("镜像名/id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("注意：父镜像的标签会被继承，但是如果有子镜像有相同的标签，会覆盖父镜像")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("ENV")])]),s._v(" "),t("p",[s._v("创建环境变量，后续的Dockerfile指令可以通过$key使用前面设置的环境变量【如果value中需要有空格，需要使用"),t("code",[s._v("\\空格")]),s._v("转译】")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("ENV "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#或者 ")]),s._v("\nENV "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#单个键值对，可省略等于号")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("WORKDIR")])]),s._v(" "),t("p",[s._v("设置docker容器内部的工作路径（可以理解成，容器内通过cd命令移动到了该路径）。不设置，默认为容器的根目录")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app/data #容器内当前路径是/app/data")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("可以在其中使用ENV定义的变量")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$path")]),s._v("/data  #ENV path=/my ，最终就是/my/data")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("COPY与ADD")])]),s._v(" "),t("p",[s._v("将宿主机的文件复制到容器")]),s._v(" "),t("p",[s._v("只有COPY和ADD两个指令的参数路径包含宿主机路径（第一个参数），其他所有指令只能操作容器内部，例如"),t("code",[s._v("WORKDIR")]),s._v("只能设置容器内部的路径，"),t("code",[s._v("RUN")]),s._v("执行shell命令也只是在容器内部执行该命令")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" <src> <dest> #将本地src路径下的文件，复制到容器的dest路径下")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" <src> <dest> #和COPY功能类似，不过src可以是网络文件下载链接或者是压缩文件，ADD会去下载和解压相应文件，然后放到容器的dest路径下")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("注意")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("第一个参数"),t("code",[s._v("<src>")]),s._v("是：宿主机路径")]),s._v(" "),t("p",[t("code",[s._v("<src>")]),s._v("必须是相对路径，是相对于"),t("code",[s._v("Dockerfile")]),s._v("文件所在的路径（不是执行"),t("code",[s._v("docker build")]),s._v("的路径），所以"),t("code",[s._v(".")]),s._v("表示宿主机的"),t("code",[s._v("Dockerfile")]),s._v("文件所在的目录")]),s._v(" "),t("p",[s._v("指定"),t("code",[s._v("<src>")]),s._v("地址时，如果使用通配符，遵循Go语言的 "),t("a",{attrs:{href:"https://golang.org/pkg/path/filepath#Match",target:"_blank",rel:"noopener noreferrer"}},[s._v("filepath.Match"),t("OutboundLink")],1),s._v(" 规则")]),s._v(" "),t("p",[s._v("如果"),t("code",[s._v("<src>")]),s._v("是目录，则复制目录下的全部内容，但是目录本身没有被复制，只是它里面的内容")])]),s._v(" "),t("li",[t("p",[s._v("第二个参数"),t("code",[s._v("<dest>")]),s._v("是：容器内路径")]),s._v(" "),t("p",[s._v("如果使用相对路径，就是以WORKDIR为当前目录（未指定WORKDIR，则默认为容器根目录），所以"),t("code",[s._v(".")]),s._v("代表的是WORKDIR设置的路径。也可以是容器内的绝对路径")]),s._v(" "),t("p",[s._v("例如：是相对路径")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("COPY test.txt ./data   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将“test.txt”添加到<WORKDIR>/data/下")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("是绝对路径")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("COPY test.txt /app/data/  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将“test.txt”复制到容器的/app/data/下")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("RUN")])]),s._v(" "),t("p",[s._v("在"),t("strong",[s._v("Docker容器内")]),s._v("执行的命令。注意不是在宿主机执行，常用来在COPY将代码源文件从宿主机复制到Docker容器后，使用RUN安装依赖、编译源码")]),s._v(" "),t("p",[s._v("有两种书写形式：")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shell格式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" <命令行命令> ")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exec 格式（双引号）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"可执行文件"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数1"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数2"')]),s._v("] ")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 例如：RUN ./test.php dev offline 等价于 RUN ["./test.php", "dev", "offline"]')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("strong",[s._v("注意")]),s._v("：RUN命令可以有多个，但是，指令每执行一次都会在 docker 上新建一层（Layer）。所以过多无意义的层，会造成镜像膨胀过大。例如：")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" centos")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" install")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" cd /app")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" mkdir logs")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("以上执行会创建 3 层镜像。但是，以 "),t("strong",[s._v("&&")]),s._v(" 符号连接命令，只会创建 1 层镜像，即以下格式：")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" centos")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install && cd /app && mkdir logs")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("strong",[s._v("注意")]),s._v("："),t("code",[s._v("\\")]),s._v("表示连接下一行的内容，有些时候将多个命令连接起来会是的RUN指令很长，为了有更好的可读性，一般会分为多行，用"),t("code",[s._v("\\")]),s._v("分隔表示下一行与本行是同一行")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" centos")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n\t\t&& cd /app "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n\t\t&& mkdir logs")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("CMD")])]),s._v(" "),t("p",[s._v("CMD 指令是容器启动后执行的shell命令，一般用作程序的入口。CMD 指令指定的程序可被 docker run 命令行参数中指定要运行的程序所覆盖")]),s._v(" "),t("p",[s._v("虽然 RUN 指令也可以执行shell命令，但是CMD指令是容器启动后才执行")]),s._v(" "),t("p",[s._v("两种格式：")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<可执行文件或命令>"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<param1>"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<param2>"')]),s._v(",...] ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<param1>"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<param2>"')]),s._v(",...]  # 该写法是为 ENTRYPOINT 指令指定的程序提供默认参数")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("推荐使用第二种格式，执行过程比较明确。第一种格式实际上在运行的过程中也会自动转换成第二种格式运行，并且默认可执行文件是 "),t("code",[s._v("*.sh")]),s._v("文件")]),s._v(" "),t("p",[t("strong",[s._v("注意")]),s._v("：如果 Dockerfile 中如果存在多个 CMD 指令，仅最后⌘ 指令生效。所以如果存在多条指令可以将命令写入shell脚本，使用CMD执行脚本")]),s._v(" "),t("p",[s._v("docker run如何覆盖CMD指令?")]),s._v(" "),t("p",[s._v("只需要在run命令后，加上其他命令，下面的例子是加了"),t("code",[s._v("echo 1")]),s._v("，这样Dockerfile中指定的CMD就不会执行，而是执行"),t("code",[s._v("echo 11")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run --name 容器名  镜像名:版本 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"11"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("ENTRYPOINT")])]),s._v(" "),t("p",[s._v("ENTRYPOINT 指令是容器启动后执行的shell命令，一般用作程序的入口")]),s._v(" "),t("p",[s._v("只有exec格式：")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<executeable>"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<param1>"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<param2>"')]),s._v(",...]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 注意：支持多条命令 ， 例如： 两条命令用 "--" 分割。tini和houndd -conf .')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tini"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"houndd"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-conf"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("可以通过"),t("code",[s._v("docker run")]),s._v("追加参数，所以很适合启动时，可以动态传递参数的程序")]),s._v(" "),t("p",[s._v("例子：")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" centos")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/echo"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this is test entrypoint"')]),s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("运行 docker run 时，在docker run最后加参数，会被追加到 ENTRYPOINT 命令后")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run 镜像名:版本号 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 this is test entrypoint 123")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("与CMD结合(当 ENTRYPOINT 与 CMD 同时存在时，CMD 中的内容会作为 ENTRYPOINT 定义命令的参数，最终执行容器启动的只有 ENTRYPOINT 中给出的命令)。也可以参考下面"),t("strong",[s._v("最佳实践")]),s._v("的例子")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dockerfile")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" centos")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"默认值"')]),s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/echo"')]),s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run 镜像名:版本号 传入值")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当docker run不传入参数时，默认使用CMD作为参数")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("运行 docker run 时，使用了 --entrypoint 选项，将覆盖 ENTRYPOINT 指令指定的命令")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run --entrypoint"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bin/echo 镜像名:版本号 \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 输出 空行")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("strong",[s._v("最佳实践")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("规则一：当 ENTRYPOINT 与 CMD 同时给出时，CMD 中的内容会作为 ENTRYPOINT 定义命令的参数，最终执行容器启动的只有 ENTRYPOINT 中给出的命令")]),s._v(" "),t("li",[s._v("规则一：CMD会被覆盖，可以通过覆盖CMD值来实现自定参数")])]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("p",[s._v("假设已通过 Dockerfile 构建了 nginx:test 镜像：")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" nginx")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),s._v("] ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/etc/nginx/nginx.conf"')]),s._v("] # CMD作为默认的参数")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("不传参运行，使用CMD作为默认参数")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run  nginx:test\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器内会默认运行以下命令 ：nginx -c /etc/nginx/nginx.conf")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("传参运行，使用传递的参数（不使用⌘ 作为参数）")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run  nginx:test  /etc/nginx/new.conf\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器内会默认运行以下命令 ：nginx -c /etc/nginx/new.conf")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("EXPOSE")])]),s._v(" "),t("p",[s._v("格式")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" <端口1> [<端口2>...]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("EXPOSE 命令只是声明了容器应该打开的端口并没有实际上将它打开，其作用仅仅是可以让运维人员知道应该开启容器的哪些端口")]),s._v(" "),t("p",[t("code",[s._v("docker run")]),s._v("可覆盖，"),t("code",[s._v("-p")]),s._v("选项才真正的将容器端口和宿主机端口建立映射")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -d --name 容器名 -p 宿主机端口:容器暴露的端口号 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("镜像名:版本号"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# `:容器暴露的端口号` 可不写，默认为Dockerfile的EXPOSE字段。写了其他值，容器就会真正开启这个端口")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("VOLUME")])]),s._v(" "),t("p",[s._v("格式")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" <路径>")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<路径1>"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<路径2>"')]),s._v("...]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("code",[s._v("docker run")]),s._v("可覆盖，将宿主机的目录 /data 映射到容器的 /data2")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run  -v /data:/data2  nginx:latest\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"优化技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优化技巧"}},[s._v("#")]),s._v(" 优化技巧")]),s._v(" "),t("h4",{attrs:{id:"多阶段构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多阶段构建"}},[s._v("#")]),s._v(" 多阶段构建")]),s._v(" "),t("p",[s._v("使⽤多阶段构建，可以在⼀个 Dockerfile 中使⽤多个 FROM 语句。每个 FROM 指令都可以使⽤不同的基础镜像，并表示开始⼀个新的构建阶段。同时可以将⼀个阶段的⽂件复制到另外⼀个阶段，在最终的镜像中保留下需要的内容即可")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("FROM xxx AS yyy")]),s._v(" 指定该阶段的名字为yyy")]),s._v(" "),t("li",[t("code",[s._v("--from=yyy")]),s._v(" 指定引用yyy阶段")])]),s._v(" "),t("p",[s._v("对阶段构建的用途：")]),s._v(" "),t("p",[s._v("例如，Go源代码需要使用Go环境编译，但是编译后的可执行文件是可以直接运行的，不依赖Go环境。")]),s._v(" "),t("p",[s._v("如果不使用多阶段构建，只能通过FROM指定一个包含Go环境的镜像，而我们运行可执行文件并不需要该镜像")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" golang "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("As")]),s._v(" go-builder")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为我们的镜像设置必要的环境变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v("  CGO_ENABLED=0 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    GOOS=linux "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    GOARCH=amd64")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移动到工作目录：/build")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /build")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将代码复制到容器中")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将我们的代码编译成二进制可执行文件app")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" go mod tidy && go build -o app .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" alpine")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("go-builder")])]),s._v(" /build .")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 声明服务端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 8888")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器时运行的命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./app"')]),s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("h4",{attrs:{id:"利用缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利用缓存"}},[s._v("#")]),s._v(" 利用缓存")]),s._v(" "),t("p",[s._v("以一个nest服务为例子")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:18")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" package.json .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" *.lock .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm config set registry https://registry.npmmirror.com/")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm run build")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 3000")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" [ "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./dist/main.js"')]),s._v(" ]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("先复制"),t("code",[s._v("package.json")]),s._v("，安装完依赖后再复制其他文件。为什么不直接复制全部文件？如下：")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:18")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm config set registry https://registry.npmmirror.com/")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm run build")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 3000")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" [ "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./dist/main.js"')]),s._v(" ]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("docker 是分层存储的，dockerfile 里的每一行指令是一层，docker引擎会做缓存。每次 docker build 的时候，只会从变化的层开始重新构建，没变的层会直接复用。")]),s._v(" "),t("p",[s._v("如果 package.json 没变，那么就不会执行 npm install，直接复用之前的，可以大幅节省安装依赖的时间。如果一开始就把所有文件复制进去，不管 package.json 变没变，只要任何一个文件变了，都会重新 npm install，这样没法充分利用缓存，性能不好")]),s._v(" "),t("p",[s._v("与"),t("strong",[s._v("多阶段构建")]),s._v("结合")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建阶段")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:18 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" build-stage")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" package.json .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm run build")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# production stage")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:18 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" production-stage")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("build-stage")])]),s._v(" /app/dist /app")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("build-stage")])]),s._v(" /app/package.json /app/package.json")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install --production # 只安装生产依赖")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 3000")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/app/main.js"')]),s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("h3",{attrs:{id:"忽略文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件"}},[s._v("#")]),s._v(" 忽略文件")]),s._v(" "),t("p",[s._v("build命令用于根据dockerfile指定的任务构建镜像")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker build -t 镜像名:版本号 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("其中的参数"),t("code",[s._v(".")]),s._v("，是指该命令执行的上下文路径，整个路径下的文件都会被发送给docker引擎用于构建镜像，如果其中有大量无用内容就使得镜像构建的速度很慢")]),s._v(" "),t("p",[s._v("实际例子：")]),s._v(" "),t("p",[s._v("下面是个前端Node项目的dockerfile（放置在项目根目录下），其中先使用COPY复制整个项目，然后在docker容器内部还会再安装依赖。我们必须在复制时就排除掉node_modules")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:16")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" mkdir /app")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . /app ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v("  npm install -g cnpm --registry=https://registry.npm.taobao.org&&cnpm install&&cnpm install -g nodemon  #nodemon是用来启动node项目的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 9091")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nodemon"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"app.js"')]),s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("方案：在项目下新建"),t("code",[s._v(".dockerignore")]),s._v("，写入下面内容就会忽略node_modules目录，COPY指令的执行速度会大大加快")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("node_modules\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"其他技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他技巧"}},[s._v("#")]),s._v(" 其他技巧")]),s._v(" "),t("p",[s._v("写 Dockerfile 时经常遇到一些运行错误，依赖错误等问题，我们可以运行基础依赖，然后进入容器命令行执行构建步骤。成功后，在做过的步骤写入Dockerfile即可")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[s._v("docker pull node:16\ndocker run -it -d node:16 bash # 跑起来后进入容器终端配置依赖的软件，然后尝试跑起来自己的软件，最后把所有做过的步骤写入到 Dockerfile 就好了\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"docker容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker容器"}},[s._v("#")]),s._v(" Docker容器")]),s._v(" "),t("p",[s._v("容器中运行着指定的镜像，容器之间彼此相互隔离，容器与宿主机也相互隔离")]),s._v(" "),t("h3",{attrs:{id:"容器基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器基础"}},[s._v("#")]),s._v(" 容器基础")]),s._v(" "),t("p",[t("strong",[s._v("创建容器，运行镜像")])]),s._v(" "),t("p",[s._v("注意：docker run运行的镜如果在本地不存在，则会自动从官方镜像仓库下载")]),s._v(" "),t("p",[s._v("docker run作为docker的核心命令涉及到众多的选项，这里仅仅是介绍基础的选项含义，后面的【多容器通信】、【容器挂载目录】还会介绍更多选项")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -d --name 容器名 -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":80 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("镜像名:版本号"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -p 将容器端口映射到本机端口，冒号前是本机端口，冒号后是容器端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --name 给容器命名，不指定就会随机生成一个名字")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -d 在后台运行容器（关闭运行该命令的shell窗口，容器也会继续运行）")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --network test 容器使用名为test的网络")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --network-alias test 给容器使用的网络设置别名test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -v  volumeName[localAddress]:dockerAddress  这个命令是将本地目录挂载到容器内的目录（bind mount），或者创建名为volumeName的Volume，由容器管理该Volume")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --volumes-from dockerName 创建容器时，把名为dockerName的容器的所有Volume挂载到新容器（同一个volume可挂载到多个不同容器）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --rm：容器退出时自动清理容器内部的文件系统。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[t("strong",[s._v("查看本地容器列表")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 全部容器")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 正在运行状态中的容器")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("更改容器状态")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止容器")]),s._v("\ndocker stop "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("容器名/容器id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器")]),s._v("\ndocker start "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("容器名/容器id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启容器")]),s._v("\ndocker restart "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("容器名/容器id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂停容器")]),s._v("\ndocker pause "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("容器名/容器id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 恢复运行容器")]),s._v("\ndocker unpause "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("容器名/容器id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[t("strong",[s._v("容器内部操作")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 登录容器内部")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it 容器ID或名字 /bin/bash  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二参数指定使用的shell（bash 、bin/bash、sh 三种shell可选，关键是看容器内安装的系统支持哪个） 登录后，执行echo $SHELL，输出当前shell名")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 退出容器内shell")]),s._v("\n\ndocker logs 容器ID/名  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器内终端输出")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("遇到 "),t("code",[s._v("exec xxx: exec format error")]),s._v(" ，考虑容器内的镜像是否不支持指定的shell")]),s._v(" "),t("h3",{attrs:{id:"容器网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器网络"}},[s._v("#")]),s._v(" 容器网络")]),s._v(" "),t("p",[s._v("参考："),t("a",{attrs:{href:"https://blog.51cto.com/u_16213614/7554657",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://blog.51cto.com/u_16213614/7554657"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"多容器通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多容器通信"}},[s._v("#")]),s._v(" 多容器通信")]),s._v(" "),t("p",[s._v("参考："),t("a",{attrs:{href:"https://docker.easydoc.net/doc/81170005/cCewZWoN/U7u8rjzF",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docker.easydoc.net/doc/81170005/cCewZWoN/U7u8rjzF"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("一个项目不是独立运行，可能会依赖多个软件，比如：一个web项目需要mysql数据库、redis等，这就需要多容器之间相互通信")]),s._v(" "),t("p",[s._v("容器之间独立，但是每个容器都可以直接访问其他容器的IP。原理如图：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/2022092715031420.png",alt:"image-20220927150314301"}})]),s._v(" "),t("p",[s._v("图中的三个容器可以相互ping通是因为有Docker0存在（Docker0相当于一个路由器或者网关），三个容器是以Docker0为中介。每新建一个容器就会出现一个成对存在的网卡，新建容器如果没有指定网络那么默认会在docker0下")]),s._v(" "),t("blockquote",[t("p",[s._v("Veth：可以简单理解成虚拟网卡，新容器后其总是成对出现，一端发送数据，另一端就能接收")])]),s._v(" "),t("p",[t("strong",[s._v("link方式")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nginx容器")]),s._v("\ndocker run -d  -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":80 --name my-nginx-1 nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# alpine容器，通过--link链接前面的nginx容器。--link的参数为 链接的容器：容器别名")]),s._v("\ndocker run -d -it --name my-alpine --link my-nginx-1:other alpine\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 登录alpine容器，安装curl工具，使用curl工具访问nginx容器")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it my-alpine "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" \napk "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" my-nginx-1 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用别名也是可以的curl other")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("访问到nginx容器")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/2022091813533220.png",alt:"image-20220918135331837"}})]),s._v(" "),t("p",[s._v("link原理：就是在容器的host中为nginx容器的域名指定别名。所以"),t("code",[s._v("curl 172.17.0.2")]),s._v("也是可以访问到nginx容器的")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在alpine容器中查看hosts文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/hosts\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#172.17.0.2\tother 58d78fa4462e my-nginx-1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("strong",[s._v("Docker-compose")])]),s._v(" "),t("p",[s._v("如果很多容器之间需要进行通讯，使用link的方式会很繁琐。可以使用Docker-compose")]),s._v(" "),t("p",[s._v("详细内容参见下一章【Docker-Compose】")]),s._v(" "),t("p",[t("strong",[s._v("创建网络")])]),s._v(" "),t("p",[s._v("每个容器之间相互独立，但是往往一个项目不是独立运行，可能会依赖多个软件，比如：一个web项目需要mysql数据库、redis等，这就需要多容器之间相互通信。创建docker网络，将两个容器运行在同一个网络中(不指定网络，就默认在Docker0下)")]),s._v(" "),t("p",[s._v("docker容器网络文档： "),t("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/network/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker network"),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[t("p",[s._v("创建网络")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker network create test-net "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建名为test-net的网络")]),s._v("\ndocker network list "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询网络列表 ，确定是否成功创建test-net网路")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("运行redis容器，接入网"),t("code",[s._v("test-net")]),s._v("，并给网络起别名"),t("code",[s._v("redis")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -d --name redis -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(":6379 --network test-net --network-alias redisnet redis:latest\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("运行另一个容器，使用"),t("code",[s._v("--network-net")]),s._v("指令，接入同一个网络，如果想要访问redis，redis地址 "),t("code",[s._v("redisnet:6379")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -d --name xxx --network test-net  xxx:xxx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"容器挂载目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器挂载目录"}},[s._v("#")]),s._v(" 容器挂载目录")]),s._v(" "),t("p",[t("strong",[s._v("现存问题")]),s._v(" ：")]),s._v(" "),t("ul",[t("li",[s._v("使用 Docker 运行后，我们改了项目代码不会立刻生效，需要重新"),t("code",[s._v("build")]),s._v("和"),t("code",[s._v("run")]),s._v("，很是麻烦。")]),s._v(" "),t("li",[s._v("容器里面产生的数据，例如 log 文件，数据库备份文件，容器删除后就丢失了。")])]),s._v(" "),t("p",[t("strong",[s._v("解决方法")]),s._v("：")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://docs.docker.com/storage/",target:"_blank",rel:"noopener noreferrer"}},[s._v("文档：docker 存储"),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("bind mount")]),s._v("：将项目的实际目录挂载到容器中，当项目代码发生变动，容器内的项目也会发生同样变动。适合于本地开发项目，代码更改后，容器内也会跟随变动")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("volume")]),s._v("（官方推荐）：容器在宿主文件系统中创建一块区域，将数据写入该区域，并由容器管理该区域数据。删除容器，数据不会丢失，且数据可挂载到多个容器中。适合于第三方成熟镜像，安装到容器中，容器自行管理数据")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("tmpfs mount")]),s._v("：将数据存储在内存中")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022013117440247320.png",alt:"image-20220131174402473"}})])])]),s._v(" "),t("p",[t("strong",[s._v("bind mount")])]),s._v(" "),t("p",[s._v("使用选项"),t("code",[s._v("-v localAddress:/app")]),s._v("第一个参数是项目本地根目录，第二个参数是容器根目录"),t("code",[s._v("/app")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目目录下")]),s._v("\ndocker run -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 --name test-hello -d  -v localAddress:/app test:v1 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# localAddress替换为项目本地根目录")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("strong",[s._v("volume")])]),s._v(" "),t("p",[s._v("使用选项"),t("code",[s._v("-v volumeName:/app")]),s._v("第一个参数是volume名字，第二个参数是容器根目录"),t("code",[s._v("/app")])]),s._v(" "),t("p",[t("strong",[s._v("注意")])]),s._v(" "),t("p",[t("code",[s._v("bind mount")]),s._v(" 和"),t("code",[s._v("Volume")]),s._v("的选项都是-v，但是第一个参数不同")]),s._v(" "),t("p",[t("strong",[s._v("查看bind mount和volume")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022013117574017320.png",alt:"image-20220131175740173"}})]),s._v(" "),t("p",[s._v("Mounts左侧是容器内路径，右侧是该容器内路径对应的本地路径（两种方式挂载目录都是在这里查看）")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022013117584230920.png",alt:"image-20220131175842309"}})]),s._v(" "),t("h2",{attrs:{id:"docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" Docker-Compose")]),s._v(" "),t("p",[s._v("一个项目可能会依赖更多的软件，例如：一个后端服务项目，其依赖mysql、redis等容器")]),s._v(" "),t("p",[s._v("如果一一去配置多个容器会比较复杂，所以，我们可以使用Docker-Compose一次性把一个项目的多个依赖软件配置好")]),s._v(" "),t("p",[s._v("Docker-Compose"),t("a",{attrs:{href:"https://www.runoob.com/docker/docker-compose.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("中文文档"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("桌面版Docker，自带Docker-Compose")])]),s._v(" "),t("li",[t("p",[s._v("服务端版，需要手动安装"),t("a",{attrs:{href:"https://docs.docker.com/compose/install/#install-compose-on-linux-systems",target:"_blank",rel:"noopener noreferrer"}},[s._v("文档"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("输入"),t("code",[s._v("docker compose")]),s._v("，出现以下提示，证明安装成功")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Docker/image-20220201115026305%20.png",alt:"image-20220201115026305"}})])])]),s._v(" "),t("h3",{attrs:{id:"配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[s._v("#")]),s._v(" 配置文件")]),s._v(" "),t("p",[s._v("Docker-Compose读取配置文件"),t("code",[s._v("docker-compose.yml")]),s._v("或"),t("code",[s._v("docker-compose.yaml")]),s._v("，来组织起多个容器。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.runoob.com/docker/docker-compose.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker-Compose指令"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("项目根目录下新建"),t("code",[s._v("docker-compose.yml")]),s._v("文件，这里对部分指令含义进行介绍")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一、docker-compose版本号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.7"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 二、服务配置(每个服务都是一个容器)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#第一个服务")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("myapp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务名")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("server "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#容器名")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" always "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#always：服务挂了自动重启；unless-stopped：服务挂了不重启")]),s._v("\n  \t"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定网络，这里两个服务指定的网络一样，表示在一个网络下")]),s._v("\n  \t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" postnet\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" . "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# build指定Dockerfil文件所在的目录，`.`代表Dockerfile文件在当前目录")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("depends_on")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" myredis "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 依赖，用来指定顺序，本服务依赖于myredis启动，myredis启动后myapp才启动（这里注意有一个大坑，myredi服务启动后，myapp就启动了，这时候redis可能还未就绪）")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 依赖可以指定多个，用数组形式")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -myredis1")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - myredi2")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定映射端口")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 80"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 挂载数据卷，将容器内./data挂载到宿主机/app目录下")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/app\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器内的环境变量")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" TZ=Asia/Shanghai\n      \n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#地第二个服务    ")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("myredis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("latest "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#image字段指镜像，这里没有使用dockerfile")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n  \t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" postnet\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/data\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" TZ=Asia/Shanghai\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 三、其他配置、网络、全局规则")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br")])]),t("p",[t("strong",[s._v("注意")]),s._v("：容器默认时间不是北京时间，增加 TZ=Asia/Shanghai 可以改为北京时间")]),s._v(" "),t("p",[t("strong",[s._v("Docker-compose相关命令")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目根目录下")]),s._v("\ndocker-compose up -d "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行docker-compose配置，-d是后台运行的含义")]),s._v("\n\ndocker-compose "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看运行状态")]),s._v("\n\ndocker-compose stop "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止运行")]),s._v("\n\ndocker-compose restart "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启     ")]),s._v("\ndocker-compose restart service-name "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启单个服务")]),s._v("\n\ndocker-compose "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" service-name "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入容器指定服务的命令行")]),s._v("\ndocker-compose logs "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("service-name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器运行log")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h2",{attrs:{id:"备份和迁移数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#备份和迁移数据"}},[s._v("#")]),s._v(" 备份和迁移数据")]),s._v(" "),t("p",[t("strong",[s._v("区分目录挂载的方式")])]),s._v(" "),t("ul",[t("li",[s._v("如果使用"),t("code",[s._v("bind mount")]),s._v("直接把宿主机的目录挂进去容器，那迁移数据很方便，直接复制目录就好了")]),s._v(" "),t("li",[s._v("如果使用"),t("code",[s._v("volume")]),s._v("方式挂载的，由于数据是由容器创建和管理的，需要用特殊的方式把数据弄出来。")])]),s._v(" "),t("p",[t("strong",[s._v("备份和导入 Volume 的流程")])]),s._v(" "),t("p",[s._v("备份：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("运行一个 ubuntu 的容器，挂载需要备份的 volume 到ubuntu容器，并且挂载宿主机目录到容器里的备份目录。")])]),s._v(" "),t("li",[t("p",[s._v("运行 tar 命令把容器中的/data/下的数据压缩为一个文件，压缩后的文件放在备份目录下")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022020211293434120.png",alt:"image-20220202112934341"}})])])]),s._v(" "),t("p",[s._v("导入：")]),s._v(" "),t("ul",[t("li",[s._v("运行 ubuntu 容器，挂载目标容器的 volume，并且挂载宿主机备份文件所在目录到ubuntu容器里")]),s._v(" "),t("li",[s._v("运行 tar 命令解压备份文件到volume所在的文件夹")])]),s._v(" "),t("p",[t("strong",[s._v("以mongodb为例")])]),s._v(" "),t("p",[s._v("备份：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("运行mongodb容器，将容器的/data目录，存储到名为 mongo-data 的Volume中")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("27018")]),s._v(":27017 --name mongo -v mongo-data:/data -d mongo:4.4\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("本地没有mongo这个镜像，会从远程镜像仓库下载")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022020120215866320.png",alt:"image-20220201202158663"}})]),s._v(" "),t("p",[s._v("然后，运行到容器")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022020120230975920.png",alt:"image-20220201202309759"}})]),s._v(" "),t("p",[s._v("同时能看到名为 mongo-data 的Volume")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022020120190851820.png",alt:"image-20220201201908518"}})]),s._v(" "),t("p",[s._v("这里可以看到mongo的volume数据都是放在容器的/data/目录下")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022020211371009620.png",alt:"image-20220202113710096"}})])]),s._v(" "),t("li",[t("p",[s._v("使用以下命令")]),s._v(" "),t("p",[s._v("shell")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run --rm --volumes-from mongo -v /Users/yc/Desktop/backup:/backup ubuntu "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" cvf /backup/backup.tar /data/\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[t("p",[t("code",[s._v("--volumes-from mongo")]),s._v("将mongo的所有Volume挂载到ubuntu容器，mongo中Volume数据在容器的/data/下，挂载到ubuntu下也是在/data/下")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("-v /Users/yc/Desktop/backup:/backup")]),s._v(" 使用bind mount，将本地目录"),t("code",[s._v("/Users/yc/Desktop/backup")]),s._v("挂载到ubuntu容器内的"),t("code",[s._v("/backup")]),s._v("目录")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022020211163569720.png",alt:"image-20220202111635697"}})])]),s._v(" "),t("li",[t("p",[t("code",[s._v("tar cvf /backup/backup.tar /data/")]),s._v(" 压缩/data/，将压缩包命名为backup.tar放在/backup/backup.tar下。这里可以看出来，在压缩命令中使用的容器内地址")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("--rm")]),s._v("ubuntu容器运行完，直接删除容器")])])])]),s._v(" "),t("li",[t("p",[s._v("mongo的Volume备份到了宿主机的"),t("code",[s._v("/Users/yc/Desktop/backup")]),s._v("目录下，可以看到多了一个"),t("code",[s._v("backup.tar")]),s._v("文件")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-2022020210493962920.png",alt:"image-20220202104939629"}})])])]),s._v(" "),t("p",[s._v("迁移")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("删除之前的mongo容器，新建一个新的mongo容器。这个容器没数据")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("27018")]),s._v(":27017 --name mongo -v mongo-data:/data -d mongo:4.4\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("新mongo容器的Volume挂载到ubuntu容器中，然后解压文件把数据放进Volume中，运行完毕后，删除ubuntu容器")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run --rm --volumes-from mongo -v d:/backup:/backup ubuntu "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" -c "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cd /data/ && tar xvf /backup/backup.tar --strip 1"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("注意")]),s._v("：strip 1 表示解压时去掉前面1层目录，因为压缩时包含了绝对路径")])])]),s._v(" "),t("h2",{attrs:{id:"自动化流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动化流程"}},[s._v("#")]),s._v(" 自动化流程")]),s._v(" "),t("p",[s._v("一般部署项目的流程：")]),s._v(" "),t("p",[t("strong",[s._v("本地开发代码")]),s._v(" —> "),t("strong",[s._v("编译代码")]),s._v(" ——> "),t("strong",[s._v("打包成镜像")]),s._v(" ——>"),t("strong",[s._v("上传私有镜像仓库")]),s._v(" ——> "),t("strong",[s._v("在服务器上拉取镜像")]),s._v(" ——> "),t("strong",[s._v("运行镜像")])]),s._v(" "),t("p",[s._v("为了提高效率，实际上这套流程还可以继续精简，以我所在的公司为例：")]),s._v(" "),t("p",[t("strong",[s._v("本地开发代码")]),s._v(" —> "),t("strong",[s._v("push到公司内部的git仓库")]),s._v(" ——> "),t("strong",[s._v("在公司自研的部署平台上选择对应仓库和分支")]),s._v(" ——>"),t("strong",[s._v("自动打包git仓库中的对应代码，上传私有镜像仓库，在服务器上拉取镜像，运行镜像")])]),s._v(" "),t("h2",{attrs:{id:"常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),t("p",[t("strong",[s._v("构建镜像(images)")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker build -t 镜像名:版本号  -f Dockerfile的路径 发送给Docker引擎的目录\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -t指定构建镜像的名字和版本号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果执行该命令的目录，就是Dockerfile所在的目录，路径一般写`.`，代表当前路径，即把当前路径发送给Docker引擎")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -f Dockerfile的路径。项目中为了区分生产测试环境的Dockerfile,一般会命名为Dockerfile.prod、Dockerfile.dev等，这时候就需要使用-f指定路径")]),s._v("\n\ndocker build  -t 镜像名:版本号  -f ./Dockerfile.prod Dockerfile的路径\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -f 有时候项目下的构建镜像的文件可能不叫dockerfile，可以用-f指定构建文件所在的位置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一般的命名风格 Dockerfile.qa 、 Dockerfile.dev")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[t("strong",[s._v("创建容器，运行指定镜像")])]),s._v(" "),t("p",[s._v("如果本地没有该镜像，会自动从远程仓库下载镜像，然后运行到容器")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -d --name 容器名 -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":80 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("镜像名:版本号"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -p 将容器端口映射到本机端口，冒号前是本机端口，冒号后是容器端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --name 给容器命名，不指定就会随机生成一个名字")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -d 在后台运行容器（关闭运行该命令的shell窗口，容器也会继续运行")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("volume相关")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker volume "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看volume列表")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("网络相关")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker network "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看网络列表")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("docker命令大全")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/dockerimg20.jpeg",alt:"dockerimg"}})]),s._v(" "),t("p",[t("code",[s._v("docker info")]),s._v(" 查询docker的信息，Registry字段为docker的镜像源")]),s._v(" "),t("h2",{attrs:{id:"常用的基础镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用的基础镜像"}},[s._v("#")]),s._v(" 常用的基础镜像")]),s._v(" "),t("h3",{attrs:{id:"alpine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#alpine"}},[s._v("#")]),s._v(" Alpine")]),s._v(" "),t("p",[s._v("精简版的Linux系统")]),s._v(" "),t("p",[s._v("特点：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("使用APK包管理工具")]),s._v(" "),t("p",[s._v("APK下载软件有时候会很慢，可以在dockerfile中指定国内的站点")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#更新Alpine的软件源为国内（清华大学）的站点，因为从默认官源拉取实在太慢了。。。")]),s._v("\nRUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://mirror.tuna.tsinghua.edu.cn/alpine/v3.4/main/"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/apk/repositories\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("只支持bin/sh")]),s._v(" "),t("p",[s._v("如果需要支持bash，可以在dockerfile中使用AKP下载")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apk add bash")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("轻量级，下图是各个Linxu镜像的大小")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zyzylifi/blog-picture/images/image-20220517115557559.png",alt:"image-20220517115557559"}})])])]),s._v(" "),t("p",[s._v("目前 Docker 官方已开始推荐使用 Alpine 替代之前的 Ubuntu 做为基础镜像环境")]),s._v(" "),t("h3",{attrs:{id:"node镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node镜像"}},[s._v("#")]),s._v(" Node镜像")]),s._v(" "),t("p",[s._v("安装了node环境的Linux系统，但是不同镜像基于的系统不同")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("node:<version>\n\n基于Debian,官方默认镜像。当你不确定你需要什么的时候选择这个就对了。这个被设计成可以丢弃的镜像，也就是可以用作构建源码使用（分阶段构建），体积挺大。\n\n\nnode:<version>-slim\n基于Debian， 删除了很多默认公共的软件包，只有node运行的最小环境。除非你有空间限制，否则推荐使用默认镜像。\n\nnode:<version>-alpine\n基于alpine, 比Debian小的多。如果想要最小的镜像，可以选择这个做为base。需要注意的是，alpine使用musl代替glibc。一些c环境的软件可能不兼容。但大部分没问题。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("例子")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:16")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改时区")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" TZ=Asia/Shanghai")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TZ}"')]),s._v(" > /etc/timezone "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    && ln -sf /usr/share/zoneinfo/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${TZ}")]),s._v(" /etc/localtime "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    && apt update "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    && apt install -y tzdata "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    && rm -rf /var/lib/apt/lists/*")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" mkdir app")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm config set registry https://registry.npm.taobao.org && npm install")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h2",{attrs:{id:"踩坑第一弹"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#踩坑第一弹"}},[s._v("#")]),s._v(" 踩坑第一弹")]),s._v(" "),t("p",[s._v("Dockerfile中我们常用的基础镜像，一般就是alpine，这是一个精简版的Linux系统")]),s._v(" "),t("p",[s._v("Dockerfile的第一句拉取基础镜像，一般都是一个Linux系统，比如")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" golang:1.17.1-alpine  #包含golang环境的Linux")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" nginx:1.17.1-alpine   #包含nginx的Linux")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("然后，我们在这个系统的基础上进行一些添加操作")]),s._v(" "),t("p",[s._v("我在实践中踩的第一个大坑就在这里，公司的部署系统远程连接Docker容器（就是使用docker exec）默认使用的是bash，但是由于alpine不支持bash，只支持bin/sh所以导致一直无法连接。")]),s._v(" "),t("p",[s._v("解决方法有两个，其核心就是在镜像中添加bash：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("构建自己的基础镜像，这个基础镜像中就添加好bash")]),s._v(" "),t("p",[s._v("这个就用到【常用命令】里补充的commit命令了")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker pull "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载bash镜像，这里面有一个")]),s._v("\n\ndocker images "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有镜像，判断是否下载好了bash")]),s._v("\n\ndocker run -itd "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#找到运行起来bash镜像的容器的ID")]),s._v("\n \ndocker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it 容器ID  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#通过ID进入bash交互模式")]),s._v("\n\napk "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" xxx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#安装xxx软件")]),s._v("\n\n\ndocker commit 容器ID 镜像名:版本号 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#把容器打包成镜像，指定镜像名和版本号")]),s._v("\n\ndocker images "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#就能找到刚刚打包的镜像了")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("上传镜像到镜像仓库，参考【发布到私有镜像】章节")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("给镜像打tag\n\npush到仓库\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("在dockerfile使用我们打包的基础镜像")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 仓库地址/命名空间/镜像名:版本号")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("在需要部署的项目根文件夹下的Dockerfile中下载bash，然后使用"),t("code",[s._v("docker build")]),s._v("基于Dockerfile文件构建镜像。我这里以一个alpine为基础镜像")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" golang:1.17.1-alpine  #包含golang环境的Linux")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apk add --no-cache --upgrade bash #安装一个bash")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])]),s._v(" "),t("p",[s._v("还有一点要特别注意：")]),s._v(" "),t("p",[s._v("我们这里是安装bash，两种方案速度相差不到，如果是安装一个特别大的软件，还是建议使用第一种方法，因为第二种方法就是容器自动去网络上下载，这样比较慢，而第一种方法，是把软件已经添加到镜像里了，我们可以把这个镜像上传到公司的镜像仓库，当dockerfile执行"),t("code",[s._v("FROM")]),s._v("时，直接在内网拉取这个镜像，这样速度就比较快了")]),s._v(" "),t("h2",{attrs:{id:"踩坑第二弹-容器时间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#踩坑第二弹-容器时间"}},[s._v("#")]),s._v(" 踩坑第二弹: 容器时间")]),s._v(" "),t("p",[s._v("容器默认时间不是北京时间")]),s._v(" "),t("p",[s._v("本地开发使用的北京时间（东八区时间），但是容器内使用的是UTC时间。导致容器的设置的定时任务无法按时执行")]),s._v(" "),t("p",[s._v("定时任务使用的是"),t("code",[s._v("node-schedule")]),s._v("这个库")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" schedule "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node-schedule"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nschedule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("scheduleJob")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0 0 8 * * *'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"北京时间8点执行"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("我希望定时脚本能在北京时间8点执行，但是实际上会在北京时间16点执行。")]),s._v(" "),t("p",[s._v("因为node-schedule设置的时间，是按照当前时区设置的，而容器内是UTC时间")]),s._v(" "),t("p",[t("strong",[s._v("解决方案")]),s._v("：")]),s._v(" "),t("p",[s._v("登录容器内部系统，输入"),t("code",[s._v("apt")]),s._v("、"),t("code",[s._v("apk")]),s._v("，能正常输出相关命令，就能判断系统使用了哪个包管理器")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker exec -it 容器id\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("dockerfile增加")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#环境变量先设置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" TZ=Asia/Shanghai")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用apk的用下面的（基于Alpine镜像的都自带apk)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apk update "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    && apk add tzdata "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    && echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TZ}"')]),s._v(" > /etc/timezone "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    && ln -sf /usr/share/zoneinfo/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${TZ}")]),s._v(" /etc/localtime "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    && rm /var/cache/apk/*")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用apt的用下面的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TZ}"')]),s._v(" > /etc/timezone "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    && ln -sf /usr/share/zoneinfo/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${TZ}")]),s._v(" /etc/localtime "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    && apt update "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    && apt install -y tzdata "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    && rm -rf /var/lib/apt/lists/*")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("参考："),t("a",{attrs:{href:"https://juejin.cn/post/7082670118257295391",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://juejin.cn/post/7082670118257295391"),t("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);